0011000000000000 ; START AT X3000
0101000000100000 ; AND R0 R0 #0 CLEAR R0
0101001001100000 ; AND R1 R1 #0 CLEAR R1
0101010010100000 ; AND R2 R2 #0 CLEAR R2
0001010010101111 ; ADD R2 R2 #15
0001010010000010 ; ADD R2 R2 R2
0001010010000010 ; ADD R2 R2 R2
0001010010101111 ; ADD R2 R2 #15
0001010010101111 ; ADD R2 R2 #15
0001010010100110 ; ADD R2 R2 #6  R2 N0W CONTAINS x60
1001010010111111 ; NOT R2 R2   
0001010010100001 ; ADD R2 R2 #1  R2 NOW CONTAINS -X60
0101011011100000 ; AND R3 R3 #0  CLEAR R3
0001011011101111 ; ADD R3 R3 #15
0001011011000011 ; ADD R3 R3 R3
0001011011000011 ; ADD R3 R3 R3
0001011011000011 ; ADD R3 R3 R3
0001011011000011 ; ADD R3 R3 R3
0001011011101111 ; ADD R3 R3 #15
1001011011111111 ; NOT R3 R3     R3 NOW CONTAINS xFF00
0101100100100000 ; AND R4 R4 #0  CLEAR R4
0001100100101111 ; AND R4 R4 #15
0001100100101111 ; AND R4 R4 #15
0001100100100010 ; AND R4 R4 #2  R4 NOW CONTAINS X20
0101101101100000 ; AND R5 R5 #0  CLEAR R5
1110101111100111 ; LEA R5        LOAD X3000 INTO R5
0001101101000101 ; ADD R5 R5 R5  R5 NOW CONTAINS X6000
0101110110100000 ; AND R6 R6 #0  CLEAR R6
0001110110100010 ; ADD R6 R6 #2
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 
0001110110000110 ; ADD R6 R6 R6 R6 NOW CONTAINS X4000
0110111110000000 ; LDR R7 R6 #0 LOAD WHAT IS AT ADDRESS X4000 INTO R7
0000101000000010 ; BRPN X2      IF ZERO GO STRAIGHT THROUGH TO HALT 
0111111101000000 ; STR R7 R5    STORE WHATEVER IS IN R7 INTO THE ADDRESS OF R5, THIS WILL STORE ZERO
1111000000100101 ; TRAP x25     HALT PROGRAM WHEN YOU REACH ALL ZERO
0101000111000011 ; AND R0 R7 R3 BIT MASK AT R3, SAVE TO ADD ON LATER
0101001111000011 ; AND R1 R7 R3 DO IT AGAIN, THIS TIME INTO R1
1001001001111111 ; NOT R1 R1
0001001001100001 ; ADD R1 R1 #1 
0001001111000001 ; ADD R1 R7 R1 SUBTRACT THE TWO TO JUST GET THE LETTER IN R1
0001001001000010 ; ADD R1 R1 R2 SUBTRACT X60 TO SEE IF ITS UPPER OR LOWER
0000001000000100 ; BRP          IF IT IS NEGATIVE JUMP STRAIGHT TO LOADING IT TO MEMORY, IF NOT PCOFFSET
0111111101000000 ; STR R7 into r5
0001101101100001 ; ADD R5 R5 #1 INCREMENT
0001110110100001 ; ADD R6 R6 #1 INCREMENT
0000111111110001 ; BRNZP X3029  JUMP BACK TO LOAD NEXT VALUE INTO R7
0001001001000100 ; ADD R1 R1 R4
0001001001000100 ; ADD R1 R1 R4
0001001001100000 ; ADD R1 R1 #0
0001001001100000 ; ADD R1 R1 #0 NOW HAVE UPPERCASE IN R1
0001000000000001 ; ADD R0 R0 R1 ADD BACK THE FIRST HALF OF BITS
0111000101000000 ; STR R0 INTO R5 THEN STORE
0000111111110110 ; BRNZP JUMP BACK TO THE INCREMENT